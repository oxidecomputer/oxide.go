// Code generated by `generate`. DO NOT EDIT.

package oxide

import "net/http"

// Client which conforms to the OpenAPI3 specification for this service.
type Client struct {
	// The endpoint of the server conforming to this interface, with scheme,
	// https://api.oxide.computer for example.
	server string

	// Client is the *http.Client for performing requests.
	client *http.Client

	// token is the API token used for authentication.
	token string
	// Disks: Virtual disks are used to store instance-local data which includes the operating system.
	Disks *DisksService
	// Firewall: Firewall operation controls the flow of network data into a VPC
	Firewall *FirewallService
	// Hardware: These operations pertain to hardware inventory and management. Racks are the unit of expansion of an Oxide deployment. Racks are in turn composed of sleds, switches, power supplies, and a cabled backplane.
	Hardware *HardwareService
	// Hidden: TODO operations that will not ship to customers
	Hidden *HiddenService
	// Images: Images are read-only Virtual Disks that may be used to boot Virtual Machines
	Images *ImagesService
	// Imagesglobal: Images are read-only Virtual Disks that may be used to boot Virtual Machines. These images are scoped globally.
	Imagesglobal *ImagesglobalService
	// Instances: Virtual machine instances are the basic unit of computation. These operations are used for provisioning, controlling, and destroying instances.
	Instances *InstancesService
	// IpPools: IP Pools contain external IP addresses that can be assigned to virtual machine Instances.
	IpPools *IpPoolsService
	// Login: Authentication endpoints
	Login *LoginService
	// Metrics: Metrics provide insight into the operation of the Oxide deployment. These include telemetry on hardware and software components that can be used to understand the current state as well as to diagnose issues.
	Metrics *MetricsService
	// Organizations: Organizations represent a subset of users and projects in an Oxide deployment.
	Organizations *OrganizationsService
	// Policy: System-wide IAM policy
	Policy *PolicyService
	// Projects: Projects are a grouping of associated resources such as instances and disks within an organization for purposes of billing and access control.
	Projects *ProjectsService
	// Roles: Roles are a component of Identity and Access Management (IAM) that allow a user or agent account access to additional permissions.
	Roles *RolesService
	// Routers: Routers direct the flow of network traffic into, out of, and within a VPC via routes.
	Routers *RoutersService
	// Routes: Routes define router policy.
	Routes *RoutesService
	// Sagas: Sagas are the abstraction used to represent multi-step operations within the Oxide deployment. These operations can be used to query saga status and report errors.
	Sagas *SagasService
	// Session: Information pertaining to the current session.
	Session *SessionService
	// Silos: Silos represent a logical partition of users and resources.
	Silos *SilosService
	// Snapshots: Snapshots of Virtual Disks at a particular point in time.
	Snapshots *SnapshotsService
	// Subnets: This tag should be moved into a generic network tag
	Subnets *SubnetsService
	// System: Internal system information
	System *SystemService
	// Updates: This tag should be moved into a operations tag
	Updates *UpdatesService
	// Vpcs: A Virtual Private Cloud (VPC) is an isolated network environment that should probaby be moved into a more generic networking tag
	Vpcs *VpcsService
}

// DisksService: Virtual disks are used to store instance-local data which includes the operating system.
type DisksService service

// FirewallService: Firewall operation controls the flow of network data into a VPC
type FirewallService service

// HardwareService: These operations pertain to hardware inventory and management. Racks are the unit of expansion of an Oxide deployment. Racks are in turn composed of sleds, switches, power supplies, and a cabled backplane.
type HardwareService service

// HiddenService: TODO operations that will not ship to customers
type HiddenService service

// ImagesService: Images are read-only Virtual Disks that may be used to boot Virtual Machines
type ImagesService service

// ImagesglobalService: Images are read-only Virtual Disks that may be used to boot Virtual Machines. These images are scoped globally.
type ImagesglobalService service

// InstancesService: Virtual machine instances are the basic unit of computation. These operations are used for provisioning, controlling, and destroying instances.
type InstancesService service

// IpPoolsService: IP Pools contain external IP addresses that can be assigned to virtual machine Instances.
type IpPoolsService service

// LoginService: Authentication endpoints
type LoginService service

// MetricsService: Metrics provide insight into the operation of the Oxide deployment. These include telemetry on hardware and software components that can be used to understand the current state as well as to diagnose issues.
type MetricsService service

// OrganizationsService: Organizations represent a subset of users and projects in an Oxide deployment.
type OrganizationsService service

// PolicyService: System-wide IAM policy
type PolicyService service

// ProjectsService: Projects are a grouping of associated resources such as instances and disks within an organization for purposes of billing and access control.
type ProjectsService service

// RolesService: Roles are a component of Identity and Access Management (IAM) that allow a user or agent account access to additional permissions.
type RolesService service

// RoutersService: Routers direct the flow of network traffic into, out of, and within a VPC via routes.
type RoutersService service

// RoutesService: Routes define router policy.
type RoutesService service

// SagasService: Sagas are the abstraction used to represent multi-step operations within the Oxide deployment. These operations can be used to query saga status and report errors.
type SagasService service

// SessionService: Information pertaining to the current session.
type SessionService service

// SilosService: Silos represent a logical partition of users and resources.
type SilosService service

// SnapshotsService: Snapshots of Virtual Disks at a particular point in time.
type SnapshotsService service

// SubnetsService: This tag should be moved into a generic network tag
type SubnetsService service

// SystemService: Internal system information
type SystemService service

// UpdatesService: This tag should be moved into a operations tag
type UpdatesService service

// VpcsService: A Virtual Private Cloud (VPC) is an isolated network environment that should probaby be moved into a more generic networking tag
type VpcsService service
